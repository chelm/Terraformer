!function(a,b){"object"==typeof module&&"object"==typeof module.exports&&(exports=module.exports=b()),"function"==typeof define&&define.amd&&define(["terraformer/terraformer"],b),"object"==typeof a.navigator&&("undefined"==typeof a.Terraformer&&(a.Terraformer={}),a.Terraformer.GeoStore=b().GeoStore)}(this,function(){function a(a,b){var c=arguments.length>2?Array.prototype.slice.call(arguments,2):null;return function(){return b.apply(a,c||arguments)}}function b(a){if(!a.store||!a.index)throw new Error("Terraformer.GeoStore requires an instace of a Terraformer.Store and a instance of Terraformer.RTree");this.index=a.index,this.store=a.store}var c,d={};return"object"==typeof this.navigator&&(c=this.Terraformer),"object"==typeof module&&"object"==typeof module.exports&&(c=require("terraformer")),arguments[0]&&"function"==typeof define&&define.amd&&(c=arguments[0]),b.prototype.add=function(a,b){var d;if(!a.type.match(/Feature/))throw new Error("Terraform.GeoStore : only Features and FeatureCollections are supported");if("Feature"===a.type&&!a.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");if("FeatureCollection"===a.type){for(var e=0;e<a.features.length;e++){var f=a.features[e];if(d=c.Tools.calculateBounds(f),!f.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");this.index.insert({x:d[0],y:d[1],w:Math.abs(d[0]-d[2]),h:Math.abs(d[1]-d[3])},f.id)}this.store.add(a,b)}else d=c.Tools.calculateBounds(a),this.index.insert({x:d[0],y:d[1],w:Math.abs(d[0]-d[2]),h:Math.abs(d[1]-d[3])},a.id),this.store.add(a,b)},b.prototype.remove=function(b,c){this.get(b,a(this,function(d,e){d?c("Could not get feature to remove",null):this.index.remove(e,b,a(this,function(a){a?c("Could not remove from index",null):this.store.remove(b,c)}))}))},b.prototype.contains=function(b,d){var e=new c.Primitive(b),f=c.Tools.calculateEnvelope(e);this.index.search(f,a(this,function(a,b){var f=[],g=0,h=0,i=function(a){if(g++,a){var i=new c.Primitive(a.geometry);e.within(i)&&f.push(a),g>=b.length&&(h?d&&d("Could not get all geometries",null):d&&d(null,f)),g>=b.length&&h&&d&&d("Could not get all geometries",null)}},j=function(){g++,h++,g>=b.length&&d&&d("Could not get all geometries",null)};if(b&&b.length)for(var k=function(a,b){a?j():i(b)},l=0;l<b.length;l++)this.get(b[l],k);else d&&d(null,f)}))},b.prototype.within=function(b,d){var e=new c.Primitive(b),f=c.Tools.calculateEnvelope(e);this.index.within(f,a(this,function(a,b){var f=[],g=0,h=0,i=function(a){if(g++,a){var i=new c.Primitive(a.geometry);i.within(e)&&f.push(a),g>=b.length&&(h?d&&d("Could not get all geometries",null):d&&d(null,f)),g>=b.length&&h&&d&&d("Could not get all geometries",null)}},j=function(){g++,h++,g>=b.length&&d&&d("Could not get all geometries",null)};if(b&&b.length)for(var k=function(a,b){a?j():i(b)},l=0;l<b.length;l++)this.get(b[l],k);else d&&d(null,f)}))},b.prototype.update=function(b,d){var e=c.Primitive(b);if("Feature"!==e.type)throw new Error("Terraform.GeoStore : only Features and FeatureCollections are supported");if(!e.id)throw new Error("Terraform.GeoStore : Feature does not have an id property");this.get(e.id,a(this,function(a,b){if(a)d("Could find feature",null);else{var f=new c.Primitive(b);this.index.remove(f.envelope(),f.id),this.index.insert(e.envelope(),e.id),this.store.update(e,d)}}))},b.prototype.get=function(a,b){this.store.get(a,b)},d.GeoStore=b,d});